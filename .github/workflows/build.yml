name: Build and Release

on:
  push:
    branches:
      - master
    paths:
      - '.github/actions/workflows/**'
      - 'server/**'
      - 'client/**'

jobs:
  server:
    name: Build Server
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Setup .NET
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore
        working-directory: server

      - name: Build
        run: dotnet build --configuration Release
        working-directory: server

      - name: Upload
        uses: actions/upload-artifact@v4.3.1
        with:
          name: server
          path: server/bin/Release/net8.0

  client:
    name: Build Client
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Install Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: '20'

      - name: Install PNPM and dependencies
        run: corepack enable && pnpm install
        working-directory: client

      - name: Build
        run: pnpm build
        working-directory: client

      - name: Upload
        uses: actions/upload-artifact@v4.3.1
        with:
          name: client
          path: client/dist

  release:
    name: Publish to GitHub Releases
    runs-on: ubuntu-latest
    needs: [server, client]
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4.1.4
        with:
          merge-multiple: true

      - name: Compute version
        id: version
        run: |
          echo "::set-output name=date::$(date +'%Y-%m-%d')"
          echo "::set-output name=version::$(date +'%Y%m%d').${{ github.run_number }}"

      - name: Archive artifacts
        run: zip -r release-${{ steps.version.outputs.date }}.zip .

      - name: Create Release
        uses: softprops/action-gh-release@v2.0.4
        with:
          name: Release ${{ steps.version.outputs.version }}
          body: |
            This is an automated release based on commit ${{ github.sha }}.
          files: release-${{ steps.version.outputs.date }}.zip
          tag_name: v${{ steps.version.outputs.version }}
